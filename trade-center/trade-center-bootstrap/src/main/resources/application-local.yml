server:
  port: 8080
server.swagger.ui.enabled: true

spring:
  cloud:
    nacos:
      discovery:
        server-addr: 10.58.0.12:8848
  application:
    name: trade-center
  schedulerx2:
    # endpoint: addr-hz-internal.edas.aliyun.com
    # namespace: xxxx-1ecc-474e-884b-36f055015657
    # groupId: trade-center-dev
    # appKey: xxxx==
    enabled: false
  datasource:
    name: trade-center
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      # filters: stat
      driver-class-name: com.mysql.jdbc.Driver
      url: jdbc:mysql://10.58.0.15:3306/gmall_trade_dev?useUnicode=true&characterEncoding=UTF8&allowMultiQueries=true&serverTimezone=Asia/Shanghai
      username: gmalltest
      password: LC@Gmall%159
      initial-size: 5
      min-idle: 5
      max-active: 20
      max-wait: 60000
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 'x'
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      pool-prepared-statements: false
      max-pool-prepared-statement-per-connection-size: 20

logging:
  config: classpath:gmall-logback-spring.xml  #这个是框架层统一定义的日志输出标准
  sls:
    endpoint: cn-hangzhou-intranet.log.aliyuncs.com  #不用改
    accessKey: xxxx  #不用改
    secretKey: xxxx  #不用改
    project: testproject-dev  #不用改
    logStore: trade-center  #需要改为自己应用的日志存储标识
    sts: false
  level:
    root: INFO
    org.springframework: INFO
    com.aliyun.gts.gmall: INFO

mybatis-plus:
  mapper-locations: classpath:/tpmapper/*Mapper.xml
  type-handlers-package: com.aliyun.gts.gmall.platform.trade.domain.typehandler
  configuration:
    # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    log-impl: org.apache.ibatis.logging.nologging.NoLoggingImpl

mq:
  accessKey: xxxx #AccessKey
  secretKey: xxxx #SecretKey
  nameServer: http://xxxx.cn-hangzhou.mq-internal.aliyuncs.com:8080
  producer:
    groupId: GID_GMALL_TRADE_PRODUCER
    timeout: 3000 #默认3000

trade:
  order:
    statuschange:
      topic: GMALL_TRADE_ORDER_STATUS_CHANGE_DEV
      groupId: GID_GMALL_TRADE_ORDER_STATUS_CHANGE_DEV
    ordersuccess:
      topic: GMALL_TRADE_ORDER_SUCCESS_DEV
      groupId: GID_GMALL_TRADE_ORDER_SUCCESS_DEV
    statuscancel:
      group: GID_ORDER_STATUS_CUST_CANCEL_DEV
    oversale:
      topic: GMALL_TRADE_ORDER_OVERSALE_DEV
      groupId: GID_GMALL_TRADE_ORDER_OVERSALE_DEV
  reversal:
    statuschange:
      topic: GMALL_TRADE_REVERSAL_STATUS_CHANGE_DEV
      groupId: GID_GMALL_TRADE_REVERSAL_STATUS_CHANGE_DEV
    torefund:
      topic: GMALL_TRADE_REVERSAL_TO_REFUND_DEV
      groupId: GID_GMALL_TRADE_REVERSAL_TO_REFUND_DEV
  pay:
    success:
      topic: GMALL_PAYCENTER_PAY_SUCCESS_DEV
      groupId: GID_GMALL_TRADE_PAY_SUCCESS_DEV
      tag: PAY_SUCCESS
    refund:
      topic: GMALL_PAYCENTER_REFUND_SUCCESS_DEV
      groupId: GID_GMALL_TRADE_REFUND_SUCCESS_DEV
      tag: REFUND_SUCCESS
  evaluation:
    give.point:
      topic: GMALL_TRADE_EVALUATION_GIVE_POINT_DEV
      groupId: GID_TRADE_EVALUATION_GIVE_POINT_DEV
  snapshot.enable: false
  promotionRepository: ext
  orderPayRepository: ext
  pointGrantService: v2  # 积分不退成负数, 积分不足时从退款金额中扣

dubbo:
  provider:
    timeout: 3000
    scan-packages:
      - com.aliyun.gts.gmall.platform.trade.api.facade
      - com.aliyun.gts.gmall.center.trade.api.facade
  consumer:
    check: false
  application:
    name: ${spring.application.name}
  protocol:
    name: dubbo
    port: 26880
  registry:
    id: trade-registry
    address: nacos://10.58.0.12:8848
  metadata-report:
    address: nacos://10.58.0.12:8848

opensearch:
  appName: order_search_dev
  accessKeyId: xxxx
  accessKeySecret: xxxx
  host: http://intranet.opensearch-cn-hangzhou.aliyuncs.com
  app:
    tcOrder: order_search_dev
    tcReversal: tc_reversal_search_dev
    tcEvoucher: drds_tc_evoucher_dev
    tcEvaluation: evaluation

elasticsearch:
  host: es-cn-xxxx.elasticsearch.aliyuncs.com
  loginName: elastic
  password: xxxx
  name:
    tcOrder: order_new_dev
    tcReversal: order_new_dev
    tcEvoucher: evoucher_new_dev
    tcEvaluation: evaluation_new_dev

# 关闭es本地健康检查（本地没有启动es）
management.health.elasticsearch.enabled: false

search:
  type: es

sequence:
  cache:
    step: 1000
    retry-times: 100
    tables:
      - name: order_id
        step: 1000
        retry-times: 100
      - name: order_pay_id
        step: 1000
        retry-times: 100

logistics:
  trace:
    platform: kdn
    bid: 1701397
    key: xxxx-caf4-4826-be4e-xxxx
    host: https://api.kdniao.com/Ebusiness/EbusinessOrderHandle.aspx
    requestType: 8001

gmall:
  framework:
    ext:
      root: plugin/
    domainextend:
      business:
        area: trade

oss:
  ak:
    key: xxxx
    security: xxxx
  endpoint:
    public: oss-cn-hangzhou.aliyuncs.com
    internal: oss-cn-hangzhou-internal.aliyuncs.com
  bucket:
    trade: gmall-private-dev

gmall.cache.multi:
  host: 10.58.0.14 # host地址 共享式参数，可由子项配置所覆盖（可为空）
  port: 6379 # 端口号，共享式参数，可由子项配置项所覆盖（可为空）
  auth: liuchao12345 # 连接密码，共享式参数，可由子项配置项所覆盖（可为空）
  database: 7 # database，共享式参数，可由子项配置项所覆盖（可为空）
  clusterNodeCount: 2 # 阿里云redis集群环境存储节点数量
  nodes:
    - alias: itemCacheManager # 别名，使用@Qualifier注解时所用的别名

trade.pay:
  mock: true
  returnUrl: '{
    "h5": "http://myth-dev2.hanghangohye.com/pages/shop_base.html#/orderList?orderTab=ALL",
    "pc": "http://myth-dev2.hanghangohye.com/pages/pcMember.html#/orderList?orderTab=ALL",
    "default": "http://myth-dev2.hanghangohye.com/pages/shop_base.html#/orderList?orderTab=ALL"
  }'
  quitUrl: '{
    "h5": "http://myth-dev2.hanghangohye.com/pages/shop_base.html#/orderList?orderTab=ALL",
    "pc": "http://myth-dev2.hanghangohye.com/pages/pcMember.html#/orderList?orderTab=ALL",
    "default": "http://myth-dev2.hanghangohye.com/pages/shop_base.html#/orderList?orderTab=ALL"
  }'
  alipay:
    platformAccount: gtsgmall@service.aliyun.com
    platformMchid:
    sellerMchidKey: smid
    channelCode: 101
  wxpay:
    platformAccount:
    platformMchid:
    sellerMchidKey: smid
    channelCode: 102
  pointpay:
    channelCode: 103

trade.evaluation.toOssUrl: true
trade.mock.logisticsReceiveStatus: NOT_RECEIVED # 用于测试外部物流状态 延长自动确认收货, 正式环境不要配该KEY